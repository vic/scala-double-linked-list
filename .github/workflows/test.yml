on:
  push:
jobs:
  test:
    needs: format
    runs-on: ${{ matrix.OS }}
    strategy:
      matrix:
        OS: ["ubuntu-latest", "macos-latest", "windows-latest"]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: coursier/cache-action@v6
    - uses: VirtusLab/scala-cli-setup@v1
    - run: scala-cli --power test .

  format:
    runs-on: "ubuntu-latest"
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: coursier/cache-action@v6
    - uses: VirtusLab/scala-cli-setup@v1
    - name: Scalafmt check
      run: |
        scala-cli --power fmt --check . || (
          echo "To format code run"
          echo "  scala-cli fmt ."
          exit 1
        )

  jitpack-commit:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: JitPack commit build
        run: curl -vSL https://jitpack.io/com/github/$GITHUB_REPOSITORY/$GITHUB_SHA/build.log || true

  jitpack-release:
    needs: test
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    steps:
      - name: JitPack release build
        run: |
          curl -vSL https://jitpack.io/com/github/$GITHUB_REPOSITORY/$(echo "${{github.ref}}" | sed 's#tags/##')/build.log || true
